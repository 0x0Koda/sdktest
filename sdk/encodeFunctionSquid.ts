import { ethers } from "ethers";
import { Address } from "cluster";
import squidAbi from "./utils/squidAbi.json";

async function main() {
  console.log("--------- Enter main function");
  const provider = new ethers.providers.JsonRpcProvider(
    "http://localhost:8500/2"
  );

  const squidAddress = "0x3C064aB6c35187e3D14D5bD8FB4c477EAA4bace7";

  let wallet = new ethers.Wallet(
    "86e04a5bc443e94b64883f5ba70f7dd4d083606ce49a43e171d2bde4d39be36d",
    provider
  );

  const what =
    "e4abe4de000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000096176616c616e6368650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a30783546383865433339363630374663336564623â€¦000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000003c064ab6c35187e3d14d5bd8fb4c477eaa4bace70000000000000000000000000000000000000000000000000000000062d5fa3000000000000000000000000000000000000000000000000000000000000000020000000000000000000000002c2d49edf7f69b0bd722e3298cc652b59878fd410000000000000000000000008ea02b04449d30ebd47dbd4b4afb21908743a19500000000000000000000000000000000000000000000000000000000";
  const tx = {
    to: ethers.utils.hexlify(squidAddress),
    data: what,
  };

  let resp = await wallet.signTransaction(tx);
  const sentTxResponse = await wallet.sendTransaction(tx);
  console.log(sentTxResponse);
}
// main
main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
